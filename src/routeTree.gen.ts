/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ServicesImport } from './routes/services'
import { Route as LisaEldridgeImport } from './routes/lisa-eldridge'
import { Route as FeaturedImport } from './routes/featured'
import { Route as DreamRoomImport } from './routes/dream-room'
import { Route as BeautyIconsImport } from './routes/beauty-icons'
import { Route as AudioImport } from './routes/audio'
import { Route as AdamReedImport } from './routes/adamReed'
import { Route as IndexImport } from './routes/index'
import { Route as AudioIndexImport } from './routes/audio/index'
import { Route as AudioLayoutImport } from './routes/audio/_layout'
import { Route as AudioEpisodeIdImport } from './routes/audio/$episodeId'

// Create/Update Routes

const ServicesRoute = ServicesImport.update({
  id: '/services',
  path: '/services',
  getParentRoute: () => rootRoute,
} as any)

const LisaEldridgeRoute = LisaEldridgeImport.update({
  id: '/lisa-eldridge',
  path: '/lisa-eldridge',
  getParentRoute: () => rootRoute,
} as any)

const FeaturedRoute = FeaturedImport.update({
  id: '/featured',
  path: '/featured',
  getParentRoute: () => rootRoute,
} as any)

const DreamRoomRoute = DreamRoomImport.update({
  id: '/dream-room',
  path: '/dream-room',
  getParentRoute: () => rootRoute,
} as any)

const BeautyIconsRoute = BeautyIconsImport.update({
  id: '/beauty-icons',
  path: '/beauty-icons',
  getParentRoute: () => rootRoute,
} as any)

const AudioRoute = AudioImport.update({
  id: '/audio',
  path: '/audio',
  getParentRoute: () => rootRoute,
} as any)

const AdamReedRoute = AdamReedImport.update({
  id: '/adamReed',
  path: '/adamReed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AudioIndexRoute = AudioIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AudioRoute,
} as any)

const AudioLayoutRoute = AudioLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AudioRoute,
} as any)

const AudioEpisodeIdRoute = AudioEpisodeIdImport.update({
  id: '/$episodeId',
  path: '/$episodeId',
  getParentRoute: () => AudioRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/adamReed': {
      id: '/adamReed'
      path: '/adamReed'
      fullPath: '/adamReed'
      preLoaderRoute: typeof AdamReedImport
      parentRoute: typeof rootRoute
    }
    '/audio': {
      id: '/audio'
      path: '/audio'
      fullPath: '/audio'
      preLoaderRoute: typeof AudioImport
      parentRoute: typeof rootRoute
    }
    '/beauty-icons': {
      id: '/beauty-icons'
      path: '/beauty-icons'
      fullPath: '/beauty-icons'
      preLoaderRoute: typeof BeautyIconsImport
      parentRoute: typeof rootRoute
    }
    '/dream-room': {
      id: '/dream-room'
      path: '/dream-room'
      fullPath: '/dream-room'
      preLoaderRoute: typeof DreamRoomImport
      parentRoute: typeof rootRoute
    }
    '/featured': {
      id: '/featured'
      path: '/featured'
      fullPath: '/featured'
      preLoaderRoute: typeof FeaturedImport
      parentRoute: typeof rootRoute
    }
    '/lisa-eldridge': {
      id: '/lisa-eldridge'
      path: '/lisa-eldridge'
      fullPath: '/lisa-eldridge'
      preLoaderRoute: typeof LisaEldridgeImport
      parentRoute: typeof rootRoute
    }
    '/services': {
      id: '/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ServicesImport
      parentRoute: typeof rootRoute
    }
    '/audio/$episodeId': {
      id: '/audio/$episodeId'
      path: '/$episodeId'
      fullPath: '/audio/$episodeId'
      preLoaderRoute: typeof AudioEpisodeIdImport
      parentRoute: typeof AudioImport
    }
    '/audio/_layout': {
      id: '/audio/_layout'
      path: ''
      fullPath: '/audio'
      preLoaderRoute: typeof AudioLayoutImport
      parentRoute: typeof AudioImport
    }
    '/audio/': {
      id: '/audio/'
      path: '/'
      fullPath: '/audio/'
      preLoaderRoute: typeof AudioIndexImport
      parentRoute: typeof AudioImport
    }
  }
}

// Create and export the route tree

interface AudioRouteChildren {
  AudioEpisodeIdRoute: typeof AudioEpisodeIdRoute
  AudioLayoutRoute: typeof AudioLayoutRoute
  AudioIndexRoute: typeof AudioIndexRoute
}

const AudioRouteChildren: AudioRouteChildren = {
  AudioEpisodeIdRoute: AudioEpisodeIdRoute,
  AudioLayoutRoute: AudioLayoutRoute,
  AudioIndexRoute: AudioIndexRoute,
}

const AudioRouteWithChildren = AudioRoute._addFileChildren(AudioRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/adamReed': typeof AdamReedRoute
  '/audio': typeof AudioLayoutRoute
  '/beauty-icons': typeof BeautyIconsRoute
  '/dream-room': typeof DreamRoomRoute
  '/featured': typeof FeaturedRoute
  '/lisa-eldridge': typeof LisaEldridgeRoute
  '/services': typeof ServicesRoute
  '/audio/$episodeId': typeof AudioEpisodeIdRoute
  '/audio/': typeof AudioIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/adamReed': typeof AdamReedRoute
  '/beauty-icons': typeof BeautyIconsRoute
  '/dream-room': typeof DreamRoomRoute
  '/featured': typeof FeaturedRoute
  '/lisa-eldridge': typeof LisaEldridgeRoute
  '/services': typeof ServicesRoute
  '/audio/$episodeId': typeof AudioEpisodeIdRoute
  '/audio': typeof AudioIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/adamReed': typeof AdamReedRoute
  '/audio': typeof AudioRouteWithChildren
  '/beauty-icons': typeof BeautyIconsRoute
  '/dream-room': typeof DreamRoomRoute
  '/featured': typeof FeaturedRoute
  '/lisa-eldridge': typeof LisaEldridgeRoute
  '/services': typeof ServicesRoute
  '/audio/$episodeId': typeof AudioEpisodeIdRoute
  '/audio/_layout': typeof AudioLayoutRoute
  '/audio/': typeof AudioIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/adamReed'
    | '/audio'
    | '/beauty-icons'
    | '/dream-room'
    | '/featured'
    | '/lisa-eldridge'
    | '/services'
    | '/audio/$episodeId'
    | '/audio/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/adamReed'
    | '/beauty-icons'
    | '/dream-room'
    | '/featured'
    | '/lisa-eldridge'
    | '/services'
    | '/audio/$episodeId'
    | '/audio'
  id:
    | '__root__'
    | '/'
    | '/adamReed'
    | '/audio'
    | '/beauty-icons'
    | '/dream-room'
    | '/featured'
    | '/lisa-eldridge'
    | '/services'
    | '/audio/$episodeId'
    | '/audio/_layout'
    | '/audio/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdamReedRoute: typeof AdamReedRoute
  AudioRoute: typeof AudioRouteWithChildren
  BeautyIconsRoute: typeof BeautyIconsRoute
  DreamRoomRoute: typeof DreamRoomRoute
  FeaturedRoute: typeof FeaturedRoute
  LisaEldridgeRoute: typeof LisaEldridgeRoute
  ServicesRoute: typeof ServicesRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdamReedRoute: AdamReedRoute,
  AudioRoute: AudioRouteWithChildren,
  BeautyIconsRoute: BeautyIconsRoute,
  DreamRoomRoute: DreamRoomRoute,
  FeaturedRoute: FeaturedRoute,
  LisaEldridgeRoute: LisaEldridgeRoute,
  ServicesRoute: ServicesRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/adamReed",
        "/audio",
        "/beauty-icons",
        "/dream-room",
        "/featured",
        "/lisa-eldridge",
        "/services"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/adamReed": {
      "filePath": "adamReed.tsx"
    },
    "/audio": {
      "filePath": "audio.tsx",
      "children": [
        "/audio/$episodeId",
        "/audio/_layout",
        "/audio/"
      ]
    },
    "/beauty-icons": {
      "filePath": "beauty-icons.tsx"
    },
    "/dream-room": {
      "filePath": "dream-room.tsx"
    },
    "/featured": {
      "filePath": "featured.tsx"
    },
    "/lisa-eldridge": {
      "filePath": "lisa-eldridge.tsx"
    },
    "/services": {
      "filePath": "services.tsx"
    },
    "/audio/$episodeId": {
      "filePath": "audio/$episodeId.tsx",
      "parent": "/audio"
    },
    "/audio/_layout": {
      "filePath": "audio/_layout.tsx",
      "parent": "/audio"
    },
    "/audio/": {
      "filePath": "audio/index.tsx",
      "parent": "/audio"
    }
  }
}
ROUTE_MANIFEST_END */
